import System.IO


-- return x + y * z
calc1 :: Int -> Int -> Int
calc1 x (y, z) = mod  (x + y * z) 256

-- return sum(x_i * y_i)
calculate1 :: [Int] -> [Int] -> Int
calculate1 x y = foldl calc1 0 (zip x y)

-- return forall k sum(x_i * y_i forall i - s_i)
check :: [Int] -> [Int] -> [Int] -> [Int]
check y (x:[]) (s:[]) = [(calculate1 y x) -  s]
check y (x:xs) (s:sx) = [(calculate1 y x) - s] ++ (check y xs sx)

to_int :: [Char] -> [Int]
to_int (first_element:[]) = [fromEnum first_element]
to_int (first:tail) = [fromEnum first] ++ (to_int tail)



-- function takes two lists and return True if they are equal
compare_lists :: Eq a => [a] -> [a] -> Bool
compare_lists [] (one_elem) = False
compare_lists (one_elem) [] = False
compare_lists (first_list1:[]) (first_list2:[]) =  (==) first_list1 first_list2
compare_lists (first_list1:tail_list1) (first_list2:tail_list2) =  ((==) first_list1 first_list2)
                                                                   &&
                                                                   (compare_lists tail_list1 tail_list2)

main = do
       user_input <- getLine
       putStrLn(
         show(compare_lists
               (check (filter (> 32) (filter (< 127) (to_int user_input)))
               [
                    [151, 244, 231, 33, 247, 110, 1, 233, 89, 6, 223, 35, 181, 255, 164, 160, 143, 168, 142, 6],
                    [72, 99, 103, 36, 118, 175, 68, 1, 116, 51, 209, 190, 140, 94, 180, 41, 106, 33, 54, 251], 
                    [198, 241, 187, 220, 144, 245, 255, 234, 66, 107, 245, 160, 236, 78, 36, 239, 120, 51, 208, 17], 
                    [52, 194, 199, 18, 4, 221, 251, 125, 230, 168, 7, 204, 15, 120, 97, 252, 154, 176, 142, 108], 
                    [139, 116, 120, 51, 183, 28, 217, 184, 31, 110, 119, 68, 114, 198, 62, 175, 213, 14, 53, 163], 
                    [224, 78, 211, 23, 253, 176, 119, 9, 143, 232, 143, 247, 31, 28, 127, 121, 101, 239, 185, 35], 
                    [104, 61, 81, 54, 78, 166, 40, 108, 31, 42, 119, 49, 207, 37, 147, 204, 139, 234, 218, 59], 
                    [136, 201, 66, 252, 19, 217, 125, 44, 31, 128, 36, 125, 15, 219, 199, 61, 36, 88, 46, 104], 
                    [3, 211, 232, 14, 74, 47, 131, 128, 106, 23, 2, 183, 108, 156, 40, 186, 154, 145, 106, 233], 
                    [154, 14, 83, 77, 27, 147, 67, 42, 17, 117, 148, 109, 24, 109, 100, 93, 52, 35, 73, 25], 
                    [200, 230, 233, 252, 73, 201, 253, 49, 19, 112, 157, 33, 25, 49, 27, 56, 58, 88, 19, 234], 
                    [233, 253, 67, 219, 60, 159, 183, 118, 105, 209, 157, 210, 188, 101, 213, 153, 222, 154, 163, 56], 
                    [219, 49, 157, 95, 79, 6, 95, 216, 244, 237, 142, 241, 22, 145, 38, 29, 190, 198, 139, 252], 
                    [115, 97, 254, 101, 132, 121, 88, 162, 84, 202, 42, 98, 108, 78, 249, 75, 132, 31, 144, 81], 
                    [197, 178, 78, 169, 41, 13, 218, 51, 225, 246, 234, 230, 4, 6, 102, 181, 53, 159, 33, 65], 
                    [76, 214, 107, 56, 207, 175, 250, 172, 186, 180, 28, 234, 150, 160, 49, 232, 234, 125, 205, 247], 
                    [203, 83, 253, 84, 160, 138, 5, 34, 100, 184, 194, 173, 238, 156, 79, 224, 170, 70, 55, 13], 
                    [153, 210, 57, 220, 4, 191, 185, 52, 85, 112, 112, 224, 108, 251, 124, 138, 211, 228, 47, 88], 
                    [25, 148, 172, 211, 57, 17, 33, 43, 79, 47, 192, 2, 254, 229, 120, 41, 186, 247, 62, 192], 
                    [149, 118, 168, 227, 208, 44, 164, 171, 116, 232, 59, 168, 29, 136, 122, 1, 132, 118, 77, 117]
                ] 
                [61, 228, 94, 109,218,126,203,95,215,205,89,141,101,11,88,148,223,222,13,189]
                ) 
                [0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
          )
        )
