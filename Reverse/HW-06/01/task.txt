global _start

section .text
_start:
xor eax, eax ; Занулить eax
xor ebx, ebx ; Занулить ---
xor ecx, ecx ; Занулить counter
xor edx, edx ; Занулить ---
Metka0:
    add eax, 10 	; Accum += 10
    add ebx, 20 	; ebx += 20
    sub ebx, eax	; ebx = ebx - eax
    cmp eax, ebx	; eax ? ebx
    jl Metka5		; eax < ebx -> goto5
    jge Metka4		; else goto4
Metka1:
    add ecx, ecx
    add ecx, ecx	; ecx *= 4 - BAD COUNTER
    sub edx, ecx	; edx -= ecx
    cmp edx, eax
    jz finish		; edx == Accum -> gotoFinish
    jmp Metka2		; else goto2
Metka2:
    xor ecx, edx	; ecx ^= edx
    add edx, edx	; edx *= 2
    sub edx, ecx	; edx -= ecx
    jmp Metka0		; goto0
Metka3:
    xor edx, ecx
    xor edx, eax	; edx ^= ecx ^= eax
    cmp edx, eax
    jne Metka1
    jg Metka2
    jl finish		; edx < Accum -> gotoFinish
Metka4:
    mov edx, 50	; edx = 50
    mov ecx, 10	; ecx = 10
    cmp eax, edx
    jg Metka5		; eax > edx -> goto5
    jmp Metka3		; else goto3
Metka5:
    mov edx, 10	; edx = 10
    mov ecx, 50	; ecx = 50
    jmp Metka0		; goto0
finish:		; edx == 10 YES!
